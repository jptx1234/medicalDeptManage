<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.jptx1234.mdm.dao.DocInstanceDao">
	<resultMap id="resultMap" type="com.github.jptx1234.mdm.model.DocInstance">
		<id column="id" property="id" javaType="int" jdbcType="INTEGER"/>
		<result column="doc_type_id" property="doc_type_id" jdbcType="INTEGER" />
		<result column="doc_name" property="doc_name" jdbcType="VARCHAR" />
		<result column="doc_desc" property="doc_desc" jdbcType="VARCHAR" />
		<result column="doc_author" property="doc_author" jdbcType="VARCHAR" />
		<result column="doc_path" property="doc_path" jdbcType="VARCHAR" />
		<result column="doc_html" property="doc_html" jdbcType="VARCHAR" />
		<result column="is_html" property="is_html" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="create_date" property="create_date" jdbcType="TIMESTAMP" />
		<result column="state_date" property="state_date" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		a.id AS id, b.id as doc_type_id, b.doc_type_name as doc_type_name, a.doc_name as doc_name, a.doc_desc as doc_desc, 
		a.doc_author as doc_author, a.doc_path as doc_path, a.doc_html as doc_html, a.is_html as is_html,
		 a.state as state, a.create_date as create_date, a.state_date as state_date
	</sql>
	<select id="count" resultType="int" parameterType="com.github.jptx1234.mdm.model.DocInstance">
		select count(0)
		from doc_instance a left join doc_type b on a.doc_type_id = b.id
		<where>
			<if test="id != null">
				a.id = #{id,jdbcType=INTEGER}
			</if>
			<if test="doc_type_name != null and doc_type_id == null">
				AND a.doc_type_id = (SELECT b.id FROM doc_type b WHERE b.doc_type_name = #{doc_type_name,jdbcType=VARCHAR})
			</if>
			<if test="doc_type_id != null">
				AND a.doc_type_id = #{doc_type_id,jdbcType=INTEGER}
			</if>
			<if test="doc_name != null">
				AND a.doc_name LIKE CONCAT('%', #{doc_name,jdbcType=VARCHAR}, '%')
			</if>
			<if test="doc_desc != null">
				AND a.doc_desc LIKE CONCAT('%', #{doc_desc,jdbcType=VARCHAR}, '%')
			</if>
			<if test="doc_author != null">
				AND a.doc_author = #{doc_author,jdbcType=VARCHAR}
			</if>
			<if test="doc_path != null">
				AND a.doc_path = #{doc_path,jdbcType=VARCHAR}
			</if>
			<if test="is_html != null">
				AND a.is_html = #{is_html,jdbcType=VARCHAR}
			</if>
			<if test="doc_html != null">
				AND a.doc_html LIKE CONCAT('%', #{doc_html,jdbcType=VARCHAR}, '%')
			</if>
			<if test="state != null">
				AND a.state = #{state,jdbcType=VARCHAR}
			</if>
			AND b.state = '1'
			
		</where>
	</select>
	
	<select id="countBlur" resultType="int">
		select count(0)
		from doc_instance a left JOIN doc_type b ON a.doc_type_id = b.id
		WHERE 
		a.state = '1' AND b.state = '1'
		AND
		(
			a.doc_name LIKE CONCAT('%', #{kw,jdbcType=VARCHAR}, '%')
			OR
			a.doc_desc LIKE CONCAT('%', #{kw,jdbcType=VARCHAR}, '%')
		)
		<if test="doc_type_id != null">
		AND a.doc_type_id = #{doc_type_id, jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="listByPage" resultMap="resultMap">
		select 
		<include refid="Base_Column_List" />
		from doc_instance a LEFT JOIN doc_type b ON a.doc_type_id = b.id
		<where>
			<if test="example.id != null">
				a.id = #{example.id,jdbcType=INTEGER}
			</if>
			<if test="example.doc_type_id != null">
				AND a.doc_type_id =  #{example.doc_type_id,jdbcType=INTEGER}
			</if>
			<if test="example.doc_name != null">
				AND a.doc_name LIKE CONCAT('%', #{example.doc_name,jdbcType=VARCHAR}, '%')
			</if>
			<if test="example.doc_desc != null">
				AND a.doc_desc LIKE CONCAT('%', #{example.doc_desc,jdbcType=VARCHAR}, '%')
			</if>
			<if test="example.doc_author != null">
				AND a.doc_author = #{example.doc_author,jdbcType=VARCHAR}
			</if>
			<if test="example.doc_path != null">
				AND a.doc_path = #{example.doc_path,jdbcType=VARCHAR}
			</if>
			<if test="example.is_html != null">
				AND a.is_html = #{example.is_html,jdbcType=VARCHAR}
			</if>
			<if test="example.doc_html != null">
				AND a.doc_html LIKE CONCAT('%', #{example.doc_html,jdbcType=VARCHAR}, '%')
			</if>
			<if test="example.state != null">
				AND a.state = #{example.state,jdbcType=VARCHAR}
			</if>
			AND b.state = '1'
		</where>
		ORDER BY a.create_date DESC
		<if test="size > 0" >
			LIMIT #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="listBlur" resultMap="resultMap">
		select 
		a.id AS id, b.id as doc_type_id, b.doc_type_name as doc_type_name, a.doc_name as doc_name, a.doc_desc as doc_desc, 
		a.doc_author as doc_author, a.doc_path as doc_path,  a.is_html as is_html,
		 a.state as state, a.create_date as create_date, a.state_date as state_date
		from doc_instance a LEFT JOIN doc_type b ON a.doc_type_id = b.id
		WHERE 
		a.state = '1' AND b.state = '1'
		AND
		(
			a.doc_name LIKE CONCAT('%', #{kw,jdbcType=VARCHAR}, '%')
			OR
			a.doc_desc LIKE CONCAT('%', #{kw,jdbcType=VARCHAR}, '%')
		)
		<if test="doc_type_id != null">
		AND a.doc_type_id = #{doc_type_id, jdbcType=INTEGER}
		</if>
		ORDER BY a.create_date DESC
		<if test="size > 0">
			LIMIT #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
		</if>
	</select>
	
	<update id="delete" parameterType="java.util.List">
		UPDATE doc_instance SET state = '0', state_date = CURRENT_TIMESTAMP()
		<where>
			id in 
			<foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
	            #{item}  
	        </foreach>
		</where>
	</update>
	
	<insert id="insert" parameterType="com.github.jptx1234.mdm.model.StuffPackDecompose">
		INSERT INTO doc_instance
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="doc_type_id != null">
				doc_type_id,
			</if>
			<if test="doc_name != null">
				doc_name,
			</if>
			<if test="doc_desc != null">
				doc_desc,
			</if>
			<if test="doc_author != null">
				doc_author,
			</if>
			<if test="doc_path != null">
				doc_path,
			</if>
			<if test="is_html != null">
				is_html,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="create_date != null">
				create_date,
			</if>
			<if test="state_date != null">
				state_date,
			</if>
			<if test="doc_html != null">
				doc_html,
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="doc_type_id != null">
				#{doc_type_id,jdbcType=INTEGER},
			</if>
			<if test="doc_name != null">
				#{doc_name,jdbcType=VARCHAR},
			</if>
			<if test="doc_desc != null">
				#{doc_desc,jdbcType=VARCHAR},
			</if>
			<if test="doc_author != null">
				#{doc_author,jdbcType=VARCHAR},
			</if>
			<if test="doc_path != null">
				#{doc_path,jdbcType=VARCHAR},
			</if>
			<if test="is_html != null">
				#{is_html,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="create_date != null">
				#{create_date,jdbcType=VARCHAR},
			</if>
			<if test="state_date != null">
				#{state_date,jdbcType=VARCHAR},
			</if>
			<if test="doc_html != null">
				#{doc_html,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
</mapper>