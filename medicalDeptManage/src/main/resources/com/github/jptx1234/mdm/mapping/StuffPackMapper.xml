<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.jptx1234.mdm.dao.StuffPackDao">
	<resultMap id="resultMap" type="com.github.jptx1234.mdm.model.StuffPack">
		<id column="id" property="id" javaType="int" jdbcType="INTEGER"/>
		<result column="pack_type_id" property="packTypeId" jdbcType="INTEGER" />
		<result column="pack_type_name" property="packTypeName" jdbcType="VARCHAR" />
		<result column="pack_name" property="packName" jdbcType="VARCHAR" />
		<result column="pack_desc" property="packDesc" jdbcType="VARCHAR" />
		<result column="pack_img" property="packImg" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="state_date" property="stateDate" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		a.id AS id, b.id as pack_type_id, b.pack_type_name as pack_type_name, a.pack_name as pack_name, a.pack_desc as pack_desc, a.pack_img as pack_img, a.state as state, a.create_date as create_date, a.state_date as state_date
	</sql>
	<select id="count" resultType="int" parameterType="com.github.jptx1234.mdm.model.StuffPack">
		select count(0)
		from stuff_pack a left join stuff_pack_type b on a.pack_type_id = b.id
		<where>
			<if test="id != null">
				a.id = #{id,jdbcType=INTEGER}
			</if>
			<if test="packTypeName != null and packTypeId == null">
				AND a.pack_type_id = (SELECT b.id FROM stuff_pack_type b WHERE b.pack_type_name = #{packTypeName,jdbcType=VARCHAR})
			</if>
			<if test="packTypeId != null">
				AND a.pack_type_id = #{packTypeId,jdbcType=INTEGER}
			</if>
			<if test="packName != null">
				AND a.pack_name LIKE CONCAT('%', #{packName,jdbcType=VARCHAR}, '%')
			</if>
			<if test="packDesc != null">
				AND a.pack_desc LIKE CONCAT('%', #{packDesc,jdbcType=VARCHAR}, '%')
			</if>
			<if test="state != null">
				AND a.state = #{state,jdbcType=VARCHAR}
			</if>
			and b.state = '1' and c.state = '1'
		</where>
	</select>
	
	<select id="countBlur" resultType="int">
		select count(0)
		from stuff_pack a left join stuff_pack_type b on  a.pack_type_id = b.id
		WHERE 
		a.state = '1' and b.state = '1'
		AND
		(
			a.pack_name LIKE CONCAT('%', #{kw,jdbcType=VARCHAR}, '%')
			OR
			a.pack_desc LIKE CONCAT('%', #{kw,jdbcType=VARCHAR}, '%')
		)
		<if test="packTypeId != null">
		AND a.pack_type_id = #{packTypeId, jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="listByPage" resultMap="resultMap">
		select 
		<include refid="Base_Column_List" />
		from stuff_pack a LEFT JOIN stuff_pack b ON a.pack_type_id = b.id
		<where>
			<if test="example.id != null">
				a.id = #{example.id,jdbcType=INTEGER}
			</if>
			<if test="example.packTypeName != null and example.packTypeId == null">
				AND pack_type_id = (SELECT b.id FROM stuff_pack_type b WHERE b.pack_type_name = #{example.packTypeName,jdbcType=VARCHAR})
			</if>
			<if test="example.packTypeId != null">
				AND pack_type_id =  #{example.packTypeId,jdbcType=INTEGER}
			</if>
			<if test="example.packName != null">
				AND pack_name LIKE CONCAT('%', #{example.packName,jdbcType=VARCHAR}, '%')
			</if>
			<if test="example.packDesc != null">
				AND pack_desc LIKE CONCAT('%', #{example.packDesc,jdbcType=VARCHAR}, '%')
			</if>
			<if test="example.state != null">
				AND a.state = #{example.state,jdbcType=VARCHAR}
			</if>
			and b.state = '1'
		</where>
		ORDER BY a.create_date DESC
		<if test="size > 0" >
			LIMIT #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="listBlur" resultMap="resultMap">
		select 
		<include refid="Base_Column_List" />
		from stuff_pack a LEFT JOIN stuff_pack_type b ON a.pack_type_id = b.id
		WHERE 
		a.state = '1' and b.state = '1'
		AND
		(
			a.pack_name LIKE CONCAT('%', #{kw,jdbcType=VARCHAR}, '%')
			OR
			a.pack_desc LIKE CONCAT('%', #{kw,jdbcType=VARCHAR}, '%')
		)
		<if test="packTypeId != null">
		AND pack_type_id = #{packTypeId, jdbcType=INTEGER}
		</if>
		ORDER BY a.create_date DESC
		<if test="size > 0">
			LIMIT #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
		</if>
	</select>
	
	<update id="delete" parameterType="java.util.List">
		UPDATE stuff_pack SET state = '0', state_date = CURRENT_TIMESTAMP()
		<where>
			id in 
			<foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
	            #{item}  
	        </foreach>
		</where>
	</update>
	
	<insert id="insert" parameterType="com.github.jptx1234.mdm.model.StuffPack">
		INSERT INTO stuff_pack
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="packTypeId != null">
				pack_type_id,
			</if>
			<if test="packName != null">
				pack_name,
			</if>
			<if test="packDesc != null">
				pack_desc,
			</if>
			<if test="packImg != null">
				pack_img,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="stateDate != null">
				state_date,
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="packTypeId != null">
				#{packTypeId,jdbcType=INTEGER},
			</if>
			<if test="packName != null">
				#{packName,jdbcType=VARCHAR},
			</if>
			<if test="packDesc != null">
				#{packDesc,jdbcType=VARCHAR},
			</if>
			<if test="packImg != null">
				#{packImg,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="stateDate != null">
				#{stateDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
</mapper>